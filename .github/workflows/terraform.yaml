name: "Terraform"

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Manage aws resources"
    runs-on: ubuntu-22.04
    outputs:
      dbhost: ${{ steps.tf_outputs.outputs.dbhost }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME}}
      AWS_BUCKET_KEY:  ${{ secrets.AWS_BUCKET_KEY}}
      TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
      TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
      TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Maven
        run: |
          sudo apt update
          sudo apt install maven

      - name: Build JAR with Maven
        run: |
          cd fupboard-api
          mvn clean install

      - name: Upload JAR to S3
        run: |
          aws s3 cp fupboard-api/target/fupboard-api-1.0-SNAPSHOT.jar s3://${{ secrets.AWS_BUCKET_NAME }}/fupboard-api-1.0-SNAPSHOT.jar

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME}}" -backend-config="key=${{ secrets.AWS_BUCKET_KEY}}" -backend-config="region=af-south-1"

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Capture Terraform Outputs
        id: tf_outputs
        run: |
          echo "dbhost=$(terraform output -raw db_host)" >> $GITHUB_OUTPUT
  flyway:
    needs: terraform
    name: Flyway migrations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Flyway Migrations
        run: |
          docker run --rm --volume ${{ github.workspace }}/migrations:/flyway/sql:ro redgate/flyway -url="jdbc:postgresql://${{ needs.terraform.outputs.dbhost }}/fupboarddb" -user="${{ secrets.TF_VAR_DB_USERNAME }}" -password="${{ secrets.TF_VAR_DB_PASSWORD }}" migrate