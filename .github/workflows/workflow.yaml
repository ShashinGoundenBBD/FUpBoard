name: "IAAC & Deployment"

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Manage AWS Resources"
    runs-on: ubuntu-22.04
    outputs:
      dbhost: ${{ steps.tf_outputs.outputs.dbhost }}
      ec2host: ${{ steps.tf_outputs.outputs.ec2host }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
      TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
      TF_VAR_key_name: fupboardkey
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" -backend-config="key=${{ secrets.AWS_BUCKET_KEY }}" -backend-config="region=af-south-1"

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Capture Terraform Outputs
        id: tf_outputs
        run: |
          echo "dbhost=$(terraform output -raw db_host)" >> $GITHUB_OUTPUT
          echo "ec2host=$(terraform output -raw ec2_host)" >> $GITHUB_OUTPUT

  flyway:
    name: "Run Flyway Migrations"
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Flyway Migrations
        run: |
          docker run --rm --volume ${{ github.workspace }}/migrations:/flyway/sql:ro redgate/flyway -url="jdbc:postgresql://${{ needs.terraform.outputs.dbhost }}/fupboarddb" -user="${{ secrets.TF_VAR_DB_USERNAME }}" -password="${{ secrets.TF_VAR_DB_PASSWORD }}" migrate

  setup:
    name: "Setup Java & Maven"
    needs: terraform
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '23'

      - name: Install Maven
        run: |
          sudo apt update
          sudo apt install -y maven

  test:
    name: "Run Unit Tests"
    needs: [setup, flyway]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Secrets File
        working-directory: ./fupboard-api/src/main/resources
        run: |
          file=application-secrets.yml
          echo "spring:" > $file
          echo "  datasource:" >> $file
          echo "    url: jdbc:postgresql://${{ needs.terraform.outputs.dbhost }}/fupboarddb" >> $file
          echo "    username: $TF_VAR_db_username" >> $file
          echo "    password: $TF_VAR_db_password" >> $file
          echo "  security:" >> $file
          echo "    oauth2:" >> $file
          echo "      resourceserver:" >> $file
          echo "        jwt:" >> $file
          echo "          audiences:" >> $file
          echo "          - ${{ secrets.CLIENT_ID }}" >> $file
          echo "fupboard:" >> $file
          echo "  oauth2:" >> $file
          echo "    client-id: ${{ secrets.CLIENT_ID }}" >> $file
          echo "    client-secret: ${{ secrets.CLIENT_SECRET }}" >> $file
          
      - name: Run Unit Tests
        working-directory: ./fupboard-api
        run: mvn clean test

  build:
    name: "Build API & CLI"
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build JAR for API
        working-directory: ./fupboard-api
        run: mvn clean install

      - name: Build JAR for CLI
        working-directory: ./fupboard-cli
        run: |
          mvn -B package --file pom.xml
          mkdir staging && cp target/*.jar staging

      - name: Upload CLI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: F-Up Board CLI
          path: ${{ github.workspace }}/fupboard-cli/staging

  deploy:
    name: "Deploy API to EC2"
    needs: [build, terraform]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy JAR to EC2
        working-directory: ./fupboard-api/target
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > privatekey.pem
          chmod 0500 privatekey.pem
          EC2_HOST=${{ needs.terraform.outputs.ec2host }}
          scp -o StrictHostKeyChecking=no -i privatekey.pem fupboard-api-0.0.1-SNAPSHOT.jar "ec2-user@$EC2_HOST:fupboard-api.jar"
          ssh -o StrictHostKeyChecking=no -i privatekey.pem "ec2-user@$EC2_HOST" "sudo systemctl restart fupboard.service"
